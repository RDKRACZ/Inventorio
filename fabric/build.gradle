plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

archivesBaseName = "${rootProject.archives_base_name}-1.17-fabric"

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    fabric()
}

repositories {
    maven { url "https://maven.terraformersmc.com/" } //ModMenu
    maven { url "https://jitpack.io" }
    maven { url "https://api.modrinth.com/maven/" }
}

dependencies {
    //Modding platform
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${rootProject.fabric_kotlin_version}"

    //Other mods we do integration with
    modCompileOnly "io.github.prospector:modmenu:2.0.0-beta.1+build.2"

    //Other modules of this project
    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = archivesBaseName
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}